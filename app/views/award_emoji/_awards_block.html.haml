- grouped_emojis = awardable.grouped_awards(inline)
.awards.js-awards-block{ class: ("hidden" if !inline && grouped_emojis.size == 0), data: { award_url: url_for([:toggle_award_emoji, @project.namespace.becomes(Namespace), @project, awardable]) } }
  - awards_sort(grouped_emojis).each do |emoji, awards|
    %button.btn.award-control.js-emoji-btn.has-tooltip{ type: "button", class: (award_active_class(awards, current_user)),data: { placement: "bottom", original_title:  award_user_list(awards, current_user)} }
      = emoji_icon(emoji)
      %span.award-control-text.js-counter
        = awards.count

  - if current_user
    .award-menu-holder.js-award-holder
      %button.btn.award-control.js-add-award{ type: "button", data: { award_menu_url: emojis_path } }
        = icon('smile-o', {class: "award-control-icon award-control-icon-normal"})
        = icon('spinner spin', {class: "award-control-icon award-control-icon-loading"})
        %span.award-control-text
          Add
